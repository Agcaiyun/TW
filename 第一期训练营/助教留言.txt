task3：

对比了你之前的代码和重构之后的代码，发现差异还是挺大的，重构之后整个代码灵活了不少，
而且用到了一些es6的语法，如箭头函数。
你在section-2的practice-3代码中提到if else的重用，可以再写一个函数，
把这段放进去，function  demo(str){};str可以传不同的符号。
还有一点要说的是，不要把var和let混在一起用，尽量用const  let，
这两个完全可以替代var，而且不会出现不必要的麻烦。　

－－助教　王桂林


task5：
亮点：
1.tasking图清晰。
2.代码可读性良好，函数和变量名都表意。
问题：
1.tasking图中的输入输出没有标明类型。
2.看到你的tasking图和代码有出入，tasking图是来指导之后的编程的。
可能是一开始接触tasking图还并不能很好的应用，所以在一开始画tasking图时就要做好任务分解
以及模块间的关联这样才能保证之后自己在编程过程中能够和tasking图的内容保持一致。

--助教苏晓风


task6：
对于你在上面提出的问题已经在论坛和Code Review中讨论过，抱歉没能及时在留言中给你解决，如果还存在疑问可以继续讨论。
亮点：
1.有自己研究taking图并仔细画了tasking图，能真正在编程过程中做到以taking图为指导。
代码中每个函数都控制了实现的功能的多少所以不会冗杂。也得到了空军小伙伴的赞许。
确实在任务分解这块以及执行过程中做的很好。

问题：
1.tasking图缺少输入输出。

--助教苏晓风


task7：
亮点：
1.tasking图结构清晰，内容完整。

问题：
1.测试用例写的不够全面，还差输入次数为2，因为2的情况下bottles的单复数也不一样。

小建议：
1.将代码中的字符串拼接转化为用模板字符串。

--助教苏晓风


task8：
因为你是将整个输入的都做了一下判断。将邮编转条码和条码转邮编在一个main函数中处理了。
多了一个判断。还有对每一个输入判断之后加了deleteSymbol的处理。
又多了一个判断所以实现过程中带来了一点思考的复杂性就感觉难一些了。

亮点：
1.测试用例全面证明自己对于题目的理解是正确的。

问题：
1.当验证码为0时你的算法为10。
2.函数deleteSymbol的判断其实可以将其不加在判断逻辑中。可以直接对输入的邮编进行split操作减少判断。
也是在code review中提到的。再次看，看到你的代码中还没有重构就提醒一下。

--助教苏晓风


task9：
看到你的代码中有大改过的痕迹，但疑惑的是为什么很多代码备注的和没有备注的是一样的。
代码的完成过程中应该是有和小伙伴讨论过，也挺好的。

亮点：
1.测试用例全面。

--助教苏晓风




